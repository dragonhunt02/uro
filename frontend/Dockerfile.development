# Get generated openapi.json
ARG uro_image=uro
FROM $uro_image AS openapi

ARG NODE_ENV=development

FROM node:22-alpine AS base
RUN apk add --no-cache curl

ENV NEXT_TELEMETRY_DISABLED=1

WORKDIR /app

RUN apk add --no-cache libc6-compat
RUN npm i -g corepack

COPY package.json yarn.lock* package-lock.json* pnpm-lock.yaml* ./
RUN \
	if [ -f yarn.lock ]; then yarn --frozen-lockfile; \
	elif [ -f package-lock.json ]; then npm ci; \
	elif [ -f pnpm-lock.yaml ]; then corepack enable pnpm && pnpm i; \
	else echo "Lockfile not found." && exit 1; \
	fi


COPY .env.$NODE_ENV* .env
COPY . .

COPY --from=openapi /app/frontend/src/__generated/openapi.json ./src/__generated/openapi.json
# To run tests without 'uro' image, uncomment line below, remove 'COPY --from=openapi...' and 'FROM uro...' lines
# and generate an openapi.json specification
# COPY src/__generated/openapi.json ./src/__generated/openapi.json

RUN ./node_modules/.bin/openapi-ts

#RUN npm run build --no-lint

#RUN addgroup -g 1001 -S nodejs
#RUN adduser -S nextjs -u 1001

#COPY --from=builder --chown=nextjs:nodejs /app/.next/standalone ./
#COPY --from=builder --chown=nextjs:nodejs /app/.next/static ./.next/static

#USER nextjs
EXPOSE 3000
CMD npm run dev-docker
